#!/bin/bash
#<pre><b>
# Script     : hexcnt
# Version    : 1.0
# Author     : Roland Rashleigh-Berry
# Date       : 20-Feb-2007
# Purpose    : Display character variables with their number of observations
#              containing hex characters. 
# SubScripts : none
# Notes      : Uses some of the sasautos extensions macros.
# Usage      : hexcnt ds1 ds2
#              hexcnt
#===============================================================================
# PARAMETERS:
#-pos- -------------------------------description-------------------------------
#  1   (optional) Dataset or list of dataset for analysis. Defaults to the 
#      whole library.
#===============================================================================
# AMENDMENT HISTORY:
# init --date-- mod-id ----------------------description------------------------
# rrb  20Feb07         Remove call to allocation macro
#===============================================================================
# This is public domain software. No guarantee as to suitability or accuracy is
# given or implied. User uses this code entirely at their own risk.
#===============================================================================


if [ $# -eq 0 ] ; then

############ no parameters specified so do for whole library ############

# Feed SAS code into standard input
sas -stdio -sasuser work 2>/dev/null << -----FINISH-----
options validvarname=any nofmterr noovp nodate nonumber;
libname here './' access=readonly;

%dslist(here)

%macro doit;
  %do i=1 %to %words(&_dslist_);
    %let memname=%scan(&_dslist_,&i,%str( ));
    %hexcnt(here.&memname)
  
    %if %length(&_hexcnt_) %then %do;
      data miss;
        length memname $ 10 varname $ 20;
        retain memname "&memname";
        %do j=1 %to %words(%str(&_hexcnt_));
          varname="%scan(%str(&_hexcnt_),&j,%str( ))";
          output;
        %end;
      run;

      proc append base=base data=miss;
      run;
    %end;
  %end;

  data _null_;
    file stdout;
    set base;
    put @1 memname @12 varname;
  run;
%mend doit;

%doit
-----FINISH-----




else


for dataset in "$@" ; do

dset=$(echo $dataset | cut -d. -f1)

########## do for individual specified datasets ##########

# Feed SAS code into standard input
sas -stdio -sasuser work 2>/dev/null << -----FINISH-----
options validvarname=any nofmterr noovp nodate nonumber;
libname here './' access=readonly;

%macro doit;
  %hexcnt(here.$dset)
  
  %if %length(&_hexcnt_) %then %do;
    data miss;
      length memname $ 10 varname $ 20;
      retain memname "&memname";
      %do j=1 %to %words(%str(&_hexcnt_));
        varname="%scan(%str(&_hexcnt_),&j,%str( ))";
        output;
      %end;
    run;
  %end;
%mend doit;

%doit

data _null_;
  file stdout;
  set miss;
  put @1 "%upcase($dset)" @12 varname;
run;

-----FINISH-----


done

fi
